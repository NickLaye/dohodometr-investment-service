#!/bin/bash

# ========================================================
# üö® –°–û–•–†–ê–ù–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –° –°–ï–†–í–ï–†–ê –ü–ï–†–ï–î GIT DEPLOY
# ========================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π, –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ê–≤—Ç–æ—Ä: Dohodometr Team
# –î–∞—Ç–∞: 13 –∞–≤–≥—É—Å—Ç–∞ 2025

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${RED}========================================================${NC}"
echo -e "${RED}üö® –°–û–•–†–ê–ù–ï–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –° –°–ï–†–í–ï–†–ê${NC}"
echo -e "${RED}========================================================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   echo -e "${RED}‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root${NC}"
   exit 1
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
SERVER_DIR="/opt/dohodometr"
BACKUP_NAME="server_changes_$(date +%Y%m%d_%H%M%S)"
BACKUP_FILE="/opt/${BACKUP_NAME}.tar.gz"

echo -e "${YELLOW}üìç –°–µ—Ä–≤–µ—Ä –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SERVER_DIR${NC}"
echo -e "${YELLOW}üíæ –§–∞–π–ª –±—ç–∫–∞–ø–∞: $BACKUP_FILE${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "$SERVER_DIR" ]; then
    echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $SERVER_DIR –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    exit 1
fi

cd "$SERVER_DIR"

echo -e "${BLUE}üîç –ê–ù–ê–õ–ò–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –ù–ê –°–ï–†–í–ï–†–ï:${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ git —Å—Ç–∞—Ç—É—Å–∞
if [ -d ".git" ]; then
    echo -e "${YELLOW}üìä Git —Å—Ç–∞—Ç—É—Å:${NC}"
    git status --porcelain | head -10
    echo ""
    
    echo -e "${YELLOW}üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:${NC}"
    git log --oneline -5
    echo ""
    
    echo -e "${YELLOW}üîß –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:${NC}"
    git diff --name-only HEAD~1 2>/dev/null | head -10 || echo "–ù–µ—Ç git –∏—Å—Ç–æ—Ä–∏–∏"
    echo ""
fi

# –ü–æ–∏—Å–∫ –Ω–µ–¥–∞–≤–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "${YELLOW}üìÅ –§–∞–π–ª—ã, –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:${NC}"
find . -type f -mtime -1 -name "*.py" | head -15
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo -e "${YELLOW}üóÇÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:${NC}"

# –ú–æ–¥–µ–ª–∏
if [ -d "backend/app/models" ]; then
    echo -e "${BLUE}   –ú–æ–¥–µ–ª–∏ –ë–î:${NC}"
    ls -la backend/app/models/*.py | awk '{print "     " $9 " (" $6 " " $7 " " $8 ")"}'
fi

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
if [ -f "backend/app/core/database.py" ]; then
    echo -e "${BLUE}   database.py: $(stat -c %y backend/app/core/database.py)${NC}"
fi

if [ -f "backend/app/core/database_sync.py" ]; then
    echo -e "${BLUE}   database_sync.py: $(stat -c %y backend/app/core/database_sync.py)${NC}"
fi

# –ú–∏–≥—Ä–∞—Ü–∏–∏
if [ -d "backend/migrations/versions" ]; then
    echo -e "${BLUE}   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏:${NC}"
    ls -la backend/migrations/versions/ | tail -3 | awk '{print "     " $9 " (" $6 " " $7 " " $8 ")"}'
fi

echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
echo -e "${YELLOW}üì¶ –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø —Å–µ—Ä–≤–µ—Ä–∞...${NC}"

# –ò—Å–∫–ª—é—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ª–æ–≥–∏
tar -czf "$BACKUP_FILE" \
    --exclude='.git' \
    --exclude='__pycache__' \
    --exclude='*.pyc' \
    --exclude='node_modules' \
    --exclude='logs/*' \
    --exclude='letsencrypt/*' \
    --exclude='postgres_data' \
    --exclude='redis_data' \
    backend/ frontend/ deployment/ 

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—Ç–¥–µ–ª—å–Ω–æ
if [ -f ".env" ]; then
    tar -rf "${BACKUP_FILE%.gz}" .env
    gzip -f "${BACKUP_FILE%.gz}"
fi

if [ -f "docker-compose.production.yml" ]; then
    tar -rf "${BACKUP_FILE%.gz}" docker-compose.production.yml 2>/dev/null || true
    gzip -f "${BACKUP_FILE%.gz}" 2>/dev/null || true
fi

echo -e "${GREEN}‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_FILE${NC}"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—ç–∫–∞–ø–µ
BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
echo -e "${GREEN}üìä –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: $BACKUP_SIZE${NC}"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
REPORT_FILE="/opt/${BACKUP_NAME}_report.txt"
cat > "$REPORT_FILE" << EOF
========================================================
DOHODOMETR.RU - –û–¢–ß–ï–¢ –û–ë –ò–ó–ú–ï–ù–ï–ù–ò–Ø–• –ù–ê –°–ï–†–í–ï–†–ï
========================================================
–î–∞—Ç–∞: $(date)
–°–µ—Ä–≤–µ—Ä: $(hostname)
–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SERVER_DIR
–ë—ç–∫–∞–ø: $BACKUP_FILE

–°–¢–ê–¢–ò–°–¢–ò–ö–ê:
-----------
–†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: $BACKUP_SIZE
–§–∞–π–ª—ã –≤ –±—ç–∫–∞–ø–µ: $(tar -tzf "$BACKUP_FILE" | wc -l)

–ù–ï–î–ê–í–ù–û –ò–ó–ú–ï–ù–ï–ù–ù–´–ï –§–ê–ô–õ–´:
-------------------------
$(find $SERVER_DIR -type f -mtime -1 -name "*.py" 2>/dev/null | head -20)

GIT –°–¢–ê–¢–£–°:
-----------
$(cd $SERVER_DIR && git status 2>/dev/null || echo "Git –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

–°–¢–†–£–ö–¢–£–†–ê –ë–î:
-------------
$(docker-compose exec -T postgres psql -U postgres -d dohodometr -c "\dt" 2>/dev/null | head -20 || echo "–ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

–ê–ö–¢–ò–í–ù–´–ï –ö–û–ù–¢–ï–ô–ù–ï–†–´:
--------------------
$(docker-compose ps 2>/dev/null || echo "Docker Compose –Ω–µ –∑–∞–ø—É—â–µ–Ω")

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
-----------
1. –°–∫–∞—á–∞–π—Ç–µ –±—ç–∫–∞–ø –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –º–∞—à–∏–Ω—É:
   scp root@$(hostname -I | awk '{print $1}'):$BACKUP_FILE ./

2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
   tar -xzf $(basename $BACKUP_FILE)

3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ–¥

4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ

5. –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –≤ git –∏ –∑–∞–¥–µ–ø–ª–æ–π—Ç–µ

–í–ù–ò–ú–ê–ù–ò–ï: –ù–ï –ó–ê–ü–£–°–ö–ê–ô–¢–ï git deploy –±–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —ç—Ç–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!
EOF

echo -e "${GREEN}üìã –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: $REPORT_FILE${NC}"

echo ""
echo -e "${GREEN}========================================================${NC}"
echo -e "${GREEN}‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –°–û–•–†–ê–ù–ï–ù–´!${NC}"
echo -e "${GREEN}========================================================${NC}"
echo ""
echo -e "${BLUE}üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${NC}"
echo ""
echo -e "${BLUE}1. –ù–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ —Å–∫–∞—á–∞–π—Ç–µ –±—ç–∫–∞–ø:${NC}"
echo -e "${BLUE}   scp root@$(hostname -I | awk '{print $1}'):$BACKUP_FILE ./${NC}"
echo -e "${BLUE}   scp root@$(hostname -I | awk '{print $1}'):$REPORT_FILE ./${NC}"
echo ""
echo -e "${BLUE}2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
echo -e "${BLUE}   tar -xzf $(basename $BACKUP_FILE)${NC}"
echo -e "${BLUE}   cat $(basename $REPORT_FILE)${NC}"
echo ""
echo -e "${BLUE}3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git${NC}"
echo ""
echo -e "${BLUE}4. –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –∑–∞–ø—É—Å–∫–∞–π—Ç–µ git deploy${NC}"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –í–ê–ñ–ù–û: –≠—Ç–∏ —Ñ–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ë–£–î–£–¢ –ü–û–¢–ï–†–Ø–ù–´ –ø—Ä–∏ git deploy!${NC}"
echo ""
echo -e "${GREEN}üîê –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é:${NC}"
echo -e "${GREEN}   $BACKUP_FILE${NC}"
echo -e "${GREEN}   $REPORT_FILE${NC}"
