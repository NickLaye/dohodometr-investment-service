name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * *'
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'python']
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.1
      - name: Initialize CodeQL
        uses: github/codeql-action/init@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql/codeql-config.yml
      - name: Set up Python
        if: matrix.language == 'python'
        uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912 # v4.7.1
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        if: matrix.language == 'python'
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Set up Node.js
        if: matrix.language == 'javascript'
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install Node.js dependencies
        if: matrix.language == 'javascript'
        run: |
          cd frontend
          npm ci
      - name: Autobuild
        uses: github/codeql-action/autobuild@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        with:
          category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.1
      - name: Set up Python
        uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912 # v4.7.1
        with:
          python-version: '3.12'
      - name: Install Python dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt safety
      - name: Python security audit with Safety
        run: |
          cd backend
          safety check --json --output safety-report.json
        continue-on-error: true
      - name: Set up Node.js
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.0
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install Node.js dependencies
        run: |
          cd frontend
          npm ci
      - name: Node.js security audit
        run: |
          cd frontend
          npm audit --audit-level=moderate --json > npm-audit-report.json
        continue-on-error: true
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            backend/safety-report.json
            frontend/npm-audit-report.json

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.1
        with:
          fetch-depth: 0
      - name: Install detect-secrets
        run: |
          pip install detect-secrets
      - name: Run secret detection
        run: |
          detect-secrets scan --all-files --baseline .secrets.baseline --exclude-files '\.git/.*' --exclude-files '.*\.lock$'
      - name: Run secret detection on new commits
        if: github.event_name == 'pull_request'
        run: |
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          if [ -s changed_files.txt ]; then
            detect-secrets scan --baseline .secrets.baseline $(cat changed_files.txt | tr '\n' ' ')
          fi

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      - name: Build backend image for scanning
        uses: docker/build-push-action@55146d969b0dff1a5c12630229609757af5b1081 # v5.0.0
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: investment-backend:scan
          load: true
      - name: Build frontend image for scanning
        uses: docker/build-push-action@55146d969b0dff1a5c12630229609757af5b1081 # v5.0.0
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: investment-frontend:scan
          load: true
      - name: Run Trivy vulnerability scanner on backend
        uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
        with:
          image-ref: 'investment-backend:scan'
          format: 'sarif'
          output: 'backend-trivy-results.sarif'
      - name: Run Trivy vulnerability scanner on frontend
        uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
        with:
          image-ref: 'investment-frontend:scan'
          format: 'sarif'
          output: 'frontend-trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        if: always()
        with:
          sarif_file: 'backend-trivy-results.sarif'
      - name: Upload Frontend Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        if: always()
        continue-on-error: true
        with:
          sarif_file: 'frontend-trivy-results.sarif'

  infrastructure-scan:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.1
      - name: Run Checkov on Infrastructure as Code
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: dockerfile,docker_compose
          output_format: sarif
          output_file_path: checkov-results.sarif
      - name: Upload Checkov scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@49abf0ba24d0b7953cb586944e918a0b92074c80 # v2.22.4
        if: always()
        with:
          sarif_file: checkov-results.sarif

  security-report:
    name: Security Summary Report
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, secret-scan, docker-security, infrastructure-scan]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Detection | ${{ needs.secret-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Docker Security | ${{ needs.docker-security.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Infrastructure Scan | ${{ needs.infrastructure-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
